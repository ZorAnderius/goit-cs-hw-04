Розширення імені для запуску файлів.

У багатьох файлів Windows є так зване розширення імені файлу – суфікс, що слідує після крапки у назві файлу і зазвичай складається, як правило, з трьох латинських символів. Це розширення призначене для визначення типу файлу. Деякі з розширень позначають виконувані файли програм різного виду, це такі розширення, як .exe, .bat і .vbs.

Для виконання команди не обов’язково вводити ім’я програми повністю, достатньо ввести ім’я без розширення. У випадку введення команди без розширення, операційна система Windows вважає, що це програма, і додає розширення файлу самостійно, коли здійснюється пошук програми. Якщо така програма знайдена, то операційна система запускає її. Після цієї програми, як правило, перед запуском вводиться список аргументів, вказаний в командному рядку після імені програми, і програма повинна відповідним чином обробляти ці аргументи [10].


Запуск команд із підвищеними привілеями.

Деякі утиліти командного рядка (а іноді програми з графічним інтерфейсом) вимагають для своєї коректної роботи підвищених адміністративних привілеїв (права для користувачів та груп задаються через інструментарій User Account Control). Щоб запустити програму підвищеними привілеями з командного рядка, необхідно запустити її з консолі командного рядка, яка і сама має підвищені права.

У такому режимі необережні дії адміністратора можуть призвести до пошкодження Windows. Це також стосується і запуску з підвищеними привілеями графічних (GUI) програм Windows. Тому варто використовувати це лише для спеціальних завдань, які потребують адміністративних привілеїв, і після завершення виконання цих завдань консоль повинна бути закрита.


Bat-файли (пакетні файли).

Хоча в операційній системі існує велика кількість потужних інструментів для створення власних корисних програм, іноді достатньо використати мову bat-файлів. Bat-файли (пакетні файли) дозволяють отримати доступ до тисяч готових програм командою рядка, які можна знайти для Windows.

Bat-файл на найпростішому рівні — це просто список команд для вікна CommandPrompt (консолі), які розміщені в одному файлі, рядок за рядком, і цьому файлу присвоєно розширення *.bat або *.cmd. Коли вводять ім’я bat-файлу в запрошенні командного рядка, Windows шукає файл з таким ім’ям у поточній директорії і потім у шляхах папок, що позначені змінною оточення PATH. Windows обробляє кожен рядок bat-файлу як команду, і запускає їх одну за одною, ніби їх вводять одну за одною вручну. Навіть на такому простому рівні bat-файл суттєво підвищить рівень автоматизації роботи користувача.

Крім цього простого сценарію використання, є кілька команд, які можна використовувати для написання найпростіших «програм» у bat-файлі, щоб виконувати різні дії залежно від того, що було введено користувачем у командному рядку, або залежно від результату виконання попередніх команд. Ці команди значно покращилися з часів MS-DOS, тому написання корисних bat-файлів у Windows набагато простішим. Зокрема, оператори IF та FOR були значно розширені за функціоналом. Можна надавати запрошення введення даних користувача, маніпулювати рядками та іменами файлів а також створювати підпрограми в одному файлі [11].

Використовуючи інтерпретатор командного рядка та пакетні файли, запускаючи їх з підвищеними привілеями, користувач здатен отримати доступ до інструментарію операційної системи, а, отже, маніпулювати вмістом системних папок та системними файлами, регулюючи об’єм вільного простору системного розділу.

Проте не всі команди або інструментарій доступний через інтерпретатор командного рядка, або використання штатного інструментарію може бути суттєво ускладнене. Наприклад, відсутність можливості коректного виконання пакетного файлу із застосунків, створених у різноманітних середовищах програмування. Оскільки такі застосунки можуть бути вже 64-розрядними, вони вимагають відповідного інтерпретатора команд. Тоді як навіть в 64-розрядній операційній системі cmd є 32-розрядним транслятором, розміщеним у системній папці \System32\і його 64-розрядна версія може бути не вказана за замовчуванням. У таких випадках використовують інші транслятори або середовища, такі як, наприклад, PowerShell.

PowerShell, як один із засобів маніпулювання об’єктами операційної системи

Microsoft розробила нове робоче середовище командного рядка, яке дістало назву Windows PowerShell (WPS). Це середовище встановлене за замовчуванням починаючи з WindowsХР. WPS найчастіше виглядає та діє, як вікно командного рядка, але насправді це дуже особлива сутність, яка дає доступ до деяких дуже потужних інструментів програмування.

З одного боку, більшість команд Windows PowerShell (які правильно називати cmdlet) генерують потоки об’єктів, а не текст. Об’єкти — це спроба представлення у комп’ютері речей із реального світу. Вони мають властивості, які описують атрибути змодельованих речей, та методи, які дозволяють керувати речами. Наприклад, об’єкт представляє певний файл на жорсткому диску і має властивості Name (ім’я), Size (розмір) і LastWriteTime (час останнього запису), і методи, наприклад, Delete (видалити), Edit (редагувати) і Open (відкрити). Windows PowerShell працює з об’єктами новим, незвичайним і, зрештою, дуже потужним способом.

При введені команди «dir» у звичайному вікні Command Prompt середовище інтерпретації команд обробить dir і у відповідь поверне блок тексту-лістингу, де будуть імена файлів і папок поточного каталогу. Команда «dir» була спеціально запрограмована для виведення інформації про файли в текстовому вигляді. І це все, що вона може робити.

У системі WPS можна ввести dir, і це також призведе до виведення списку файлів, але неявно відбувається зовсім інше. У WPS — це просто коротке посилання на Get-Childitem cmdlet, який при найпростішому використанні генерує потік об’єктів File. Кожен об’єкт представляє один із файлів у папці і у кожного такого об’єкта є властивості та методи (наприклад, ім’я та розмір). Коли об’єкт (будь-якого виду) потрапляє у вікно-запрошення WPS, система друкує рядок тексту про об’єкт з найбільш важливими його властивостями. Для об’єкта File це включає ім’я файлу, розмір та дату створення. Таким чином, коли при введенні команди «dir» WPS генерує потік об’єктів File і він представляється як зручний, розділений табуляціями список файлів.

Кінцевий результат виглядає так, як і в робочому оточенні командного рядка, але все відбувається абстрактнішим способом. Cmdlet не звертає уваги на форматування тексту: він просто генерує набір об’єктів File. І уже вікно WPS перетворить будь-який список об’єктів на читабельний лістинг. Файли, облікові записи користувачів, служби Windows, і т. д. –будь-який об’єкт, який викликає відповідний cmdlet, система WPS перетворює у своїй консолі на зручний лістинг.

Додатково WPS включає повнофункціональну об’єктно-орієнтовану мову програмування, яка має доступ до платформи програмування .NET компанії Microsoft. Це означає, що скрипти WPS можуть виконувати складніші обчислення та обмінюватися інформацією з іншими комп’ютерами та мережевими («хмарними») сервісами.

WPS навіть дозволяє робити складні операції з об’єктами без програмування. Можна використовувати символ каналу « | » для направлення потоків об’єктів від одного cmdlet до іншого, і це дозволяє виконувати дуже складні, специфічні дії з інструментами, які окремо дуже прості та за природою виглядають звичайними.

WPS це повноцінна мова програмування зі змінними, циклами, підпрограмами, визначеними користувачем об’єктами тощо. Можна використовувати це в запрошенні введення команди або у файлах скриптів. Також можна створити ярлики (які називаються псевдонімами, aliases) для команд і скриптів, які найчастіше використовуються, щоб їх можна було простіше використовувати надалі [12,13].

Крім того через PowerShell можна створювати графічні користувацькі інтерфейси для написаних скриптів. Для цього можна скористатись як окремим командами так і сторонніми розробками, наприклад PowerShell Studio 2021 і, звичайно, засобами Microsoft Visual Studio [12].

У нашому випадку нас цікавлять можливості PowerShell, які дозволяють обійти обмеження по розрядності при виконанні пакетних файлів із створюваних застосунків, та можливість маніпулювання UWP-застосунками і зверненнями до магазину застосунків Microsoft. Такі застосунки через PowerShell можна вимикати, видаляти, встановлювати, відновлювати, тим самим заощаджуючи вільний простір на системному розділі.

Проте деякі маніпуляції із системними папками вимагають написання пакетних файлів та скриптів, які звертаються до служб та інших засобів операційної системи для коректної очищення цих системних папок. Такі звертання можна здійснювати через роботу із локальними груповими політиками. Але не всі версії операційної системи мають змогу це зробити, особливо це стосується редакцій початкового рівня, такі як Starter або Home. Іншим способом роботи з такими об’єктами є робота через системний реєстр операційної системи.


Реєстр операційної системи Windows 10 та способи його редагування.

Реєстр Windows 10 –основне сховище операційної системи, побудоване у вигляді ієрархічної бази даних. В ній зберігається кожен параметр, кожне налаштування операційної системи, інформація про встановлене на комп’ютері програмне забезпечення та функціонуючі апаратні компоненти, дані про всі облікові записи користувачів. У цій базі даних записані асоціації файлів та системні політики. Кожна програма, що працює в опереційній системі, обов’язково звертається до реєстру, наприклад, з метою отримання інформації про систему [14].

Логічно реєстр являє собою набір ієрархічних дерев (кущів), кожне з яких має власне призначення:

    HKCR(HKEY_CLASSES_ROOT) – містить інформацію про відомі типи документів та їх асоціації з програмами для відкриття;
    HKCU(HKEY_CURRENT_USER) – зберігається налаштування параметрів користувача, що увійшов до системи;
    HKLM(HKEY_LOCAL_MACHINE) – записані відомості про апаратну конфігурацію комп’ютера (перелік обладнання, режими його функціонування, версії драйверів);
    HKCC(HKEY_CURRENT_CONFIG) – містить дві гілки, у першій з яких зберігається конфігурація програмного забезпечення, у другій –параметри системи (більшість ключів розділу, доступні для редагування вигляду графічного інтерфейсу Windows);
    HKU (HKEY_USERS) – містяться налаштування кожного облікового запису завантаженої операційної системи [14].

Фізично файли системного реєстру Windows розташовуються у різних підкаталогах системного каталогу. За кожен кущ відповідає окремий файл (за тим же шляхом розміщена і його резервна копія) [14]:

HKEY_LOCAL_MACHINE\SYSTEM:

%systemroot%\system32\config\system

%systemroot%\sysWoW64\config\system

HKEY_LOCAL_MACHINE\SAM:

%systemroot%\system32\config\sam

%systemroot%\sysWoW64\config\sam

HKEY_LOCAL_MACHINE\SECURITY:

%systemroot%\system32\config\security%systemroot%\sysWoW64\config\security

HKEY_LOCAL_MACHINE\SOFTWARE:

%systemroot%\system32\config\software%systemroot%\sysWoW64\config\software

HKEY_USERS\UserProfile:

%systemdrive%\Users\%username%

HKEY_USERS.DEFAULT:

%systemroot%\system32\config\default

%systemroot%\sysWoW64\config\default.

Кожен кущ містить розділи, що в свою чергу містять ключі, яким можна присвоювати ті чи інші значення, в залежності від типу ключів. Передбачено наступні основні типи ключів:

    REG_SZ – рядковий;
    REG_EXPAND_SZ – розширений рядковий;
    REG_BINARY – двійковий, містить необроблені двійкові дані;
    REG_DWORD – числовий, містить ціле число, зазвичай служить як перемикач, де 0 — вимкнено, а 1 — увімкнено;
    REG_LINK – рядковий, вказує шлях до файлу, це символьне посилання у форматі Unicode;
    REG_MULTI_SZ – багаторядковий, визначає масив рядків;
    та інші, менш поширені типи [15].

Працювати з реєстром, а фактично його редагувати (вносити зміни), можна кількома способами:

    через редактор реєстру (інструмент схожий до провідника, замість папок та файлів –кущі, розділи та ключі), що викликається командами regedit або regedt32 з командного рядка;
    за допомогою .reg-файлів (текстових файлів з асоційованим з редактором реєстру розширенням, з наперед визначеним синтаксисом введення куща, розділу, ключа та його типу і значенням, вони містять відповідний заголовок та один і більше рядків із записами про зміни параметрів реєстру);
    за допомогою команди командного рядка REG, яка допускає роботу в пакетних файлах, а, отже, придатна для автоматизації процесів [16].


Rundll32, як інструмент виклику функцій системних бібліотек.

У процесі застосування визначених методів та засобів час від часу може виникати необхідність використання вмонтованих в операційну систему штатних інструментів. І хоча звичайний користувач може скористатись графічним інтерфейсом операційної системи для виклику таких інструментів, такий підхід не дозволить автоматизувати цей процес, а, отже, і не дозволить використати його при проектуванні програмних систем. Тому часто для опису виклику таких інструментів у пакетних файлах та різноманітних скриптах використовують виклики функцій системних бібліотек за допомогою утиліти rundll32.

Така утиліта завантажує та виконує 32-розрядні бібліотеки динамічного компонування (DLL). Настроювання параметрів для rundll32 відсутні. Довідкові відомості надаються для конкретної бібліотеки DLL, яка виконується за допомогою команди rundll32 з підвищеними привілеями (від імені адміністратора). Rundll32 може викликати лише функції з бібліотеки DLL, які були явно написані для виклику за допомогою rundll32. [17]

У 64-бітних версіях операційних систем сімейства Windows присутні 2 варіанти програми rundll32.exe:

64-бітна версія, розташована в %SystemRoot%\System32\;

32-бітна версія, розташована в %SystemRoot%\SysWOW64\.

Для запуску програми rundll32 використовується синтаксис командного рядка такого вигляду:

rundll32.exe <бібліотека_dll>,< функція> <необов’язкові_параметри_функції>.

Наприклад, для виведення вікна регіональних налаштувань операційної системи через командний рядок: rundll32.exe shell32.dll,Control_RunDLL intl.cpl,,0


Огляд існуючих розробок для очищення та оптимізації системного розділу Windows 10.

Існує велика кількість різноманітних програмних продуктів, як комерційних, так і вільних, для реалізації методів оптимізації системного розділу, шляхом його очищення (прибирання). За досить тривалий період різними виробниками було розроблено цілий ряд таких готових рішень, проте жодне із них повністю не охоплює усі можливі варіанти очищення системного розділу. Проте існує цілий ряд програмних продуктів, які досить ефективно реалізують частину таких методів.

Для порівняння було розглянуто штатну консольну утиліту DISM [18] та три безкоштовних, проте досить ефективних програмних засоби:

    PatchCleaner [4];
    Wise Disk Cleaner X [19];
    DISM++ [20].

Деякі з цих інструментів вузько спеціалізовані і поки єдині, які зустрічаються серед безкоштовних розробок (наприклад, PatchCleaner), а інші мають розширений функціонал, який може стосуватись не тільки для очищення системного розділу: Wise Disk Cleaner X та DISM++. Деякий функціонал не може забезпечити жодна із розглянутих програм, а лише штатні вузькоспеціалізовані системні утиліти, або взагалі лише послідовність дій користувача від імені адміністратора. Для порівняльного аналізу таких розробок було сформовано порівняльну таблицю (табл. 1).


Таблиця 1

Порівняння програмного забезпечення по досліджуваному функціоналу («+» –наявна функція, «-» –відсутня, «+/-» –частково присутня)



ВИСНОВКИ ТА ПЕРСПЕКТИВИ ПОДАЛЬШИХ ДОСЛІДЖЕНЬ

Отже, у роботі проаналізовано основні файлові об’єкти Windows10, які найсуттєвіше впливають на розмір вільного простору системного розділу. Розглянуто засоби, за допомогою яких можна реалізувати комплексне обслуговування системного розділу на предмет його очищення (прибирання) з метою вивільнення вільного простору на ньому. Це можна здійснювати як в ручному режимі, що може зайняти досить тривалий час, або скористатись програмними продуктами сторонніх розробників, такими як PatchCleaner, Driver Store Explorer, DISM++, Wise Disk Cleaner та іншими, які пропонують окремі виробники. Оскільки деякий функціонал не може забезпечити жодна з існуючих розглянутих програм, а лише штатні вузькоспеціалізовані системні утиліти, або взагалі лише послідовність дій користувача від імені адміністратора, то на практиці, варто поєднувати у процесі оптимізації системного розділу декілька програмних засобів, які за своїми функціональними можливостями перекривають один одного та дозволяють максимально збільшити об’єм вивільненого простору на системному розділі та реалізувати налаштування операційної системи, що теж вивільняє простір, або не допускає його зменшення в майбутньому в процесі експлуатації системи. Такі маніпуляції досить тривалі, деякі з них вимагають дотримання послідовності їх виконання, отримання доступу до суміжних засобів та об’єктів, пошуку сторонніх засобів тощо. Іншим шляхом оптимізації системного розділу могло б бути створення програмної розробки, яка дозволила б автоматизувати процеси очищення та оптимізації, таким чином прискорити їх виконання та передбачити можливі нестандартні ситуації, які можуть виникнути в процесі оптимізації.


СПИСОК ВИКОРИСТАНИХ ДЖЕРЕЛ

    Булатецький,В.В., Булатецька,Л.В., Пруц,Г.С. Методи та засоби вивільнення простору системного розділу ОС Microsoft Windows 10. Комп’ютерно-інтегровані технології: освіта, наука, виробництво, (32), 85–89.
    Windows and GPT FAQ. Developer tools, technical documentation and coding examples | Microsoft Docs.https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/windows-and-gpt-faq
    What partitions does windows automatically create during instalation -Windows 10 Help Forums.Windows 10 Help Forums. https://www.tenforums.com/installation-upgrade/34336-what-partitions-does-windows-automatically-create-during-instalation.html
    Duntemann,J., & Degunking,B.J. (2005).Windows.(2-ге вид.). Paraglyph Press.
    4 Ways to Safely Delete Unused MSI and MSP Files from Windows Installer Folder. Raymond.CC Blog.https://www.raymond.cc/blog/safely-delete-unused-msi-and-mst-files-from-windows-installer-folder/
    Bashlak,D. (2017, 26 квітня). Как очистить папку FileRepository в Driver Store .remontka.pro. https://remontka.pro/driverstore-filerepository-folder-windows/
    Что за папка Driverstore и можно ли её удалить в Windows. Настрой всё своё домашнее оборудование. https://nastroyvse.ru/opersys/win/papka-driverstore-v-windows.html
    Bashlak, D. (2016, 11 лютого). Очистка папки WinSxS в Windows 10, 8 и Windows 7. remontka.pro. https://remontka.pro/winsxs-windows/9Huculak,M. (2019, 28 жовтня). Is your WinSxS folder getting too big? Here's how to clean it on Windows
    Windows Central. https://www.windowscentral.com/how-reclaim-space-reducing-size-winsxs-folder-windows-10
    McLean, I., Thomas, O. (2010). MCTS Self-Paced Training Kit (Exam 70-680): Configuring Windows 7. Microsoft Press.
    Инструменты командной строки и автоматизации | windows | adminstuff. microsin.net - заметки радиолюбителя. http://microsin.net/adminstuff /windows/command-line-and-automation-tools.html
    What is PowerShell?–PowerShell. Developer tools, technical documentation and coding examples | Microsoft Docs. https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-7.1
    How to Create a GUI for PowerShell Scripts? –The IT Bros. The IT Bros. https://theitbros.com/powershell-gui-for-scripts
    Реестр Windows 10 в подробностях.(б.д.). О проекте Windowsprofi.ru и настройке операционных систем. https://windowsprofi.ru/win10/reestr-windows-10.html
    Windows registry for advanced users -Windows Server. Developer tools, technical documentation and coding examples | Microsoft Docs. https://docs.microsoft.com/en-us/troubleshoot/windows-server/performance/windows-registry-advanced-users
    Reg commands. Developer tools, technical documentation and coding examples | Microsoft Docs. https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg
    Rundll32. Developer tools, technical documentation and coding examples | Microsoft Docs.https://docs.microsoft.com/ru-ru/windows-server/administration/windows-commands/rundll32
    Deployment Image Servicing and Management (DISM) Best Practices.Developer tools, technical documentation and coding examples | Microsoft Docs. https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/deployment-image-servicing-and-management--dism--best-practices?view=windows-11
    WiseCleaner Software -Optimize, Clean and Speed Up Your Windows PC.WiseCleaner Software -Optimize, Clean and Speed Up Your Windows PC. https://www.wisecleaner.com/
    Beware of Dism++ with Windows customizations.Born's Tech and Windows World.https://borncity.com/win/2019/08/16/beware-of-dism-with-windows-customizations/